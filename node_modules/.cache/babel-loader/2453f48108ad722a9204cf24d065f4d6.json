{"ast":null,"code":"var _jsxFileName = \"/Users/dewan03/test-frontend-result/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport axios from 'axios';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nfunction tableV2(data, column) {\n  const columns = [{\n    field: 'name',\n    headerName: 'Name',\n    pinnable: true,\n    width: 130\n  }, {\n    field: 'phone',\n    headerName: 'Phone Number',\n    width: 130\n  }, {\n    field: 'company',\n    headerName: 'Company',\n    width: 200,\n    valueGetter: params => {\n      return params.row.company.name;\n    }\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    sortable: false,\n    width: 160 // valueGetter: (params) =>\n    //   `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n\n  }, {\n    field: 'address',\n    headerName: 'City',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.row.address.city}`\n  }, {\n    field: 'street',\n    headerName: 'Street',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.row.address.street}`\n  }, {\n    field: 'codepos',\n    headerName: 'POS Code',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.row.address.zipcode}`\n  }];\n  const columnGroupingModel = [{\n    groupId: 'naming',\n    headerName: 'Living Information',\n    freeReordering: true,\n    headerAlign: 'center',\n    children: [{\n      field: 'address'\n    }, {\n      field: 'street'\n    }, {\n      field: 'codepos'\n    }]\n  }, {\n    groupId: 'personal',\n    headerName: 'Personal Information',\n    freeReordering: true,\n    headerAlign: 'center',\n    children: [{\n      field: 'name'\n    }, {\n      field: 'phone'\n    }, {\n      field: 'company'\n    }, {\n      field: 'email'\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 420,\n      width: '75%',\n      margin: 200\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      sx: {\n        color: '#1875D2',\n        backgroundColor: 'aliceblue',\n        borderRadius: 2,\n        boxShadow: 1\n      } // Sets the margin to 2 times the spacing unit = 16px\n      ,\n      rows: data,\n      columns: columns,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      experimentalFeatures: {\n        columnGrouping: true\n      },\n      checkboxSelection: true,\n      disableColumnMenu: true,\n      columnGroupingModel: columnGroupingModel,\n      components: {\n        Toolbar: GridToolbar\n      },\n      componentsProps: {\n        toolbar: {\n          showQuickFilter: true,\n          quickFilterProps: {\n            debounceMs: 500\n          }\n        }\n      },\n      initialState: {\n        pinnedColumns: {\n          left: ['name'],\n          right: ['actions']\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\nfunction table(data) {\n  let column = ['Name', 'Phone', 'Username', 'Company', 'website'];\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"customized table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: column.length > 0 && column.map(name => /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.length > 0 && data.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.company.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.website\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function BasicTable() {\n  _s();\n\n  const [data, setData] = useState('');\n\n  let data_grid = async () => axios.get('https://my-json-server.typicode.com/glendmaatita/userjsondemo/db').then(response => {\n    console.log(response);\n    let data = response.data.data;\n    console.log(data);\n    setData(data); //table(data)\n  });\n\n  useEffect(() => {\n    data_grid();\n  }, []);\n  console.log(data); // return (\n  //   <div>\n  //     {data.length > 0 && (\n  //       <ul>\n  //         {data.map(user => (\n  //           <li key={user.id}>{user.name}</li>\n  //         ))}\n  //       </ul>\n  //     )}\n  //   </div>\n  // )\n\n  return tableV2(data);\n}\n\n_s(BasicTable, \"zP+gM9ZQWNiQQMpducgiYYvbang=\");\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["Table","TableBody","TableCell","TableContainer","axios","TableHead","TableRow","Paper","DataGrid","GridToolbar","React","useState","useEffect","createData","name","calories","fat","carbs","protein","tableV2","data","column","columns","field","headerName","pinnable","width","valueGetter","params","row","company","sortable","address","city","street","zipcode","columnGroupingModel","groupId","freeReordering","headerAlign","children","height","margin","color","backgroundColor","borderRadius","boxShadow","columnGrouping","Toolbar","toolbar","showQuickFilter","quickFilterProps","debounceMs","pinnedColumns","left","right","table","minWidth","length","map","border","phone","username","website","BasicTable","setData","data_grid","get","then","response","console","log"],"sources":["/Users/dewan03/test-frontend-result/src/App.js"],"sourcesContent":["import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport axios from 'axios';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { DataGrid, GridToolbar  } from '@mui/x-data-grid';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\nfunction tableV2(data,column){\n  const columns = [\n    { field: 'name', headerName: 'Name',pinnable:true, width: 130 },\n    { field: 'phone', headerName: 'Phone Number', width: 130 },\n    {\n      field: 'company',\n      headerName: 'Company',\n      width: 200,\n      valueGetter: (params) =>{\n        return params.row.company.name\n      }\n    \n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      sortable: false,\n      width: 160,\n      // valueGetter: (params) =>\n      //   `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n    },\n    {\n      field: 'address',\n      headerName: 'City',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.row.address.city}`,\n    },\n    {\n      field: 'street',\n      headerName: 'Street',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.row.address.street}`,\n    },\n    {\n      field: 'codepos',\n      headerName: 'POS Code',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.row.address.zipcode}`,\n    },\n  ];\n  const columnGroupingModel = [\n    {\n      groupId: 'naming',\n      headerName: 'Living Information',\n      freeReordering: true,\n      headerAlign: 'center',\n      children: [{ field: 'address' }, { field: 'street' },{ field: 'codepos' }],\n    },\n    {\n      groupId: 'personal',\n      headerName: 'Personal Information',\n      freeReordering: true,\n      headerAlign: 'center',\n      children: [{ field: 'name' }, { field: 'phone' },{ field: 'company' },{ field: 'email' }],\n    },\n  ];\n  return (\n    <div style={{ height: 420, width: '75%',margin:200 }}>\n      <DataGrid\n        sx={\n        { \n            color: '#1875D2',\n            backgroundColor: 'aliceblue',\n            borderRadius: 2,\n            boxShadow:1,\n        }\n        }  // Sets the margin to 2 times the spacing unit = 16px\n        rows={data}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        experimentalFeatures={{ columnGrouping: true }}\n        checkboxSelection\n        disableColumnMenu\n        columnGroupingModel={columnGroupingModel}\n        components={{ Toolbar: GridToolbar }}\n        componentsProps={{\n          toolbar: {\n            showQuickFilter: true,\n            quickFilterProps: { debounceMs: 500 },\n          },\n        }}\n        initialState={{ pinnedColumns: { left: ['name'], right: ['actions'] } }}\n      />\n    </div>\n  );\n}\nfunction table(data){\n  let column=['Name','Phone','Username','Company','website']\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            {\n              column.length>0 && column.map((name)=>(\n                <TableCell align=\"left\">{name}</TableCell>\n              ))\n            }\n          \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          { data.length>0 && data.map((row) => (\n            <TableRow\n              key={row.name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"left\">{row.phone}</TableCell>\n              <TableCell align=\"left\">{row.username}</TableCell>\n              <TableCell align=\"left\">{row.company.name}</TableCell>\n              <TableCell align=\"left\">{row.website}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default function BasicTable() {\n  const [data,setData]=useState('')\n\n  let data_grid=async()=>axios\n  .get('https://my-json-server.typicode.com/glendmaatita/userjsondemo/db')\n  .then((response)=> {\n    console.log(response)\n    let data=response.data.data\n    console.log(data)\n    setData(data)\n    //table(data)\n  })\n  useEffect(() => {\n    data_grid();\n  \n  }, []);\n  console.log(data)\n  // return (\n  //   <div>\n  //     {data.length > 0 && (\n  //       <ul>\n  //         {data.map(user => (\n  //           <li key={user.id}>{user.name}</li>\n  //         ))}\n  //       </ul>\n  //     )}\n  //   </div>\n  // )\n  return tableV2(data)\n  \n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAuC,kBAAvC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,GAApC,EAAyCC,KAAzC,EAAgDC,OAAhD,EAAyD;EACvD,OAAO;IAAEJ,IAAF;IAAQC,QAAR;IAAkBC,GAAlB;IAAuBC,KAAvB;IAA8BC;EAA9B,CAAP;AACD;;AACD,SAASC,OAAT,CAAiBC,IAAjB,EAAsBC,MAAtB,EAA6B;EAC3B,MAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,MAAT;IAAiBC,UAAU,EAAE,MAA7B;IAAoCC,QAAQ,EAAC,IAA7C;IAAmDC,KAAK,EAAE;EAA1D,CADc,EAEd;IAAEH,KAAK,EAAE,OAAT;IAAkBC,UAAU,EAAE,cAA9B;IAA8CE,KAAK,EAAE;EAArD,CAFc,EAGd;IACEH,KAAK,EAAE,SADT;IAEEC,UAAU,EAAE,SAFd;IAGEE,KAAK,EAAE,GAHT;IAIEC,WAAW,EAAGC,MAAD,IAAW;MACtB,OAAOA,MAAM,CAACC,GAAP,CAAWC,OAAX,CAAmBhB,IAA1B;IACD;EANH,CAHc,EAYd;IACES,KAAK,EAAE,OADT;IAEEC,UAAU,EAAE,OAFd;IAGEO,QAAQ,EAAE,KAHZ;IAIEL,KAAK,EAAE,GAJT,CAKE;IACA;;EANF,CAZc,EAoBd;IACEH,KAAK,EAAE,SADT;IAEEC,UAAU,EAAE,MAFd;IAGEO,QAAQ,EAAE,KAHZ;IAIEL,KAAK,EAAE,GAJT;IAKEC,WAAW,EAAGC,MAAD,IACV,GAAEA,MAAM,CAACC,GAAP,CAAWG,OAAX,CAAmBC,IAAK;EAN/B,CApBc,EA4Bd;IACEV,KAAK,EAAE,QADT;IAEEC,UAAU,EAAE,QAFd;IAGEO,QAAQ,EAAE,KAHZ;IAIEL,KAAK,EAAE,GAJT;IAKEC,WAAW,EAAGC,MAAD,IACV,GAAEA,MAAM,CAACC,GAAP,CAAWG,OAAX,CAAmBE,MAAO;EANjC,CA5Bc,EAoCd;IACEX,KAAK,EAAE,SADT;IAEEC,UAAU,EAAE,UAFd;IAGEO,QAAQ,EAAE,KAHZ;IAIEL,KAAK,EAAE,GAJT;IAKEC,WAAW,EAAGC,MAAD,IACV,GAAEA,MAAM,CAACC,GAAP,CAAWG,OAAX,CAAmBG,OAAQ;EANlC,CApCc,CAAhB;EA6CA,MAAMC,mBAAmB,GAAG,CAC1B;IACEC,OAAO,EAAE,QADX;IAEEb,UAAU,EAAE,oBAFd;IAGEc,cAAc,EAAE,IAHlB;IAIEC,WAAW,EAAE,QAJf;IAKEC,QAAQ,EAAE,CAAC;MAAEjB,KAAK,EAAE;IAAT,CAAD,EAAuB;MAAEA,KAAK,EAAE;IAAT,CAAvB,EAA2C;MAAEA,KAAK,EAAE;IAAT,CAA3C;EALZ,CAD0B,EAQ1B;IACEc,OAAO,EAAE,UADX;IAEEb,UAAU,EAAE,sBAFd;IAGEc,cAAc,EAAE,IAHlB;IAIEC,WAAW,EAAE,QAJf;IAKEC,QAAQ,EAAE,CAAC;MAAEjB,KAAK,EAAE;IAAT,CAAD,EAAoB;MAAEA,KAAK,EAAE;IAAT,CAApB,EAAuC;MAAEA,KAAK,EAAE;IAAT,CAAvC,EAA4D;MAAEA,KAAK,EAAE;IAAT,CAA5D;EALZ,CAR0B,CAA5B;EAgBA,oBACE;IAAK,KAAK,EAAE;MAAEkB,MAAM,EAAE,GAAV;MAAef,KAAK,EAAE,KAAtB;MAA4BgB,MAAM,EAAC;IAAnC,CAAZ;IAAA,uBACE,QAAC,QAAD;MACE,EAAE,EACF;QACIC,KAAK,EAAE,SADX;QAEIC,eAAe,EAAE,WAFrB;QAGIC,YAAY,EAAE,CAHlB;QAIIC,SAAS,EAAC;MAJd,CAFF,CAQK;MARL;MASE,IAAI,EAAE1B,IATR;MAUE,OAAO,EAAEE,OAVX;MAWE,QAAQ,EAAE,CAXZ;MAYE,kBAAkB,EAAE,CAAC,CAAD,CAZtB;MAaE,oBAAoB,EAAE;QAAEyB,cAAc,EAAE;MAAlB,CAbxB;MAcE,iBAAiB,MAdnB;MAeE,iBAAiB,MAfnB;MAgBE,mBAAmB,EAAEX,mBAhBvB;MAiBE,UAAU,EAAE;QAAEY,OAAO,EAAEvC;MAAX,CAjBd;MAkBE,eAAe,EAAE;QACfwC,OAAO,EAAE;UACPC,eAAe,EAAE,IADV;UAEPC,gBAAgB,EAAE;YAAEC,UAAU,EAAE;UAAd;QAFX;MADM,CAlBnB;MAwBE,YAAY,EAAE;QAAEC,aAAa,EAAE;UAAEC,IAAI,EAAE,CAAC,MAAD,CAAR;UAAkBC,KAAK,EAAE,CAAC,SAAD;QAAzB;MAAjB;IAxBhB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;AACD,SAASC,KAAT,CAAepC,IAAf,EAAoB;EAClB,IAAIC,MAAM,GAAC,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,EAA2B,SAA3B,EAAqC,SAArC,CAAX;EACA,oBACE,QAAC,cAAD;IAAgB,SAAS,EAAEd,KAA3B;IAAA,uBACE,QAAC,KAAD;MAAO,EAAE,EAAE;QAAEkD,QAAQ,EAAE;MAAZ,CAAX;MAA8B,cAAW,kBAAzC;MAAA,wBACE,QAAC,SAAD;QAAA,uBACE,QAAC,QAAD;UAAA,UAEIpC,MAAM,CAACqC,MAAP,GAAc,CAAd,IAAmBrC,MAAM,CAACsC,GAAP,CAAY7C,IAAD,iBAC5B,QAAC,SAAD;YAAW,KAAK,EAAC,MAAjB;YAAA,UAAyBA;UAAzB;YAAA;YAAA;YAAA;UAAA,QADiB;QAFvB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAWE,QAAC,SAAD;QAAA,UACIM,IAAI,CAACsC,MAAL,GAAY,CAAZ,IAAiBtC,IAAI,CAACuC,GAAL,CAAU9B,GAAD,iBAC1B,QAAC,QAAD;UAEE,EAAE,EAAE;YAAE,oCAAoC;cAAE+B,MAAM,EAAE;YAAV;UAAtC,CAFN;UAAA,wBAIE,QAAC,SAAD;YAAW,SAAS,EAAC,IAArB;YAA0B,KAAK,EAAC,KAAhC;YAAA,UACG/B,GAAG,CAACf;UADP;YAAA;YAAA;YAAA;UAAA,QAJF,eAOE,QAAC,SAAD;YAAW,KAAK,EAAC,MAAjB;YAAA,UAAyBe,GAAG,CAACgC;UAA7B;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE,QAAC,SAAD;YAAW,KAAK,EAAC,MAAjB;YAAA,UAAyBhC,GAAG,CAACiC;UAA7B;YAAA;YAAA;YAAA;UAAA,QARF,eASE,QAAC,SAAD;YAAW,KAAK,EAAC,MAAjB;YAAA,UAAyBjC,GAAG,CAACC,OAAJ,CAAYhB;UAArC;YAAA;YAAA;YAAA;UAAA,QATF,eAUE,QAAC,SAAD;YAAW,KAAK,EAAC,MAAjB;YAAA,UAAyBe,GAAG,CAACkC;UAA7B;YAAA;YAAA;YAAA;UAAA,QAVF;QAAA,GACOlC,GAAG,CAACf,IADX;UAAA;UAAA;UAAA;QAAA,QADiB;MADrB;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;AAED,eAAe,SAASkD,UAAT,GAAsB;EAAA;;EACnC,MAAM,CAAC5C,IAAD,EAAM6C,OAAN,IAAetD,QAAQ,CAAC,EAAD,CAA7B;;EAEA,IAAIuD,SAAS,GAAC,YAAS9D,KAAK,CAC3B+D,GADsB,CAClB,kEADkB,EAEtBC,IAFsB,CAEhBC,QAAD,IAAa;IACjBC,OAAO,CAACC,GAAR,CAAYF,QAAZ;IACA,IAAIjD,IAAI,GAACiD,QAAQ,CAACjD,IAAT,CAAcA,IAAvB;IACAkD,OAAO,CAACC,GAAR,CAAYnD,IAAZ;IACA6C,OAAO,CAAC7C,IAAD,CAAP,CAJiB,CAKjB;EACD,CARsB,CAAvB;;EASAR,SAAS,CAAC,MAAM;IACdsD,SAAS;EAEV,CAHQ,EAGN,EAHM,CAAT;EAIAI,OAAO,CAACC,GAAR,CAAYnD,IAAZ,EAhBmC,CAiBnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,OAAOD,OAAO,CAACC,IAAD,CAAd;AAED;;GA9BuB4C,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}