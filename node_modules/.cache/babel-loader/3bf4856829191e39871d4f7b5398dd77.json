{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext, useGridRootProps, GridEditModes } from '@mui/x-data-grid-premium';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ReportProblemIcon from '@mui/icons-material/ReportProblem';\nimport InfoIcon from '@mui/icons-material/Info';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { STATUS_OPTIONS } from '../services/static-data';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction EditStatus(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n\n  const handleChange = async event => {\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: event.target.value\n    });\n\n    if (isValid && rootProps.editMode === GridEditModes.Cell) {\n      apiRef.current.stopCellEditMode({\n        id,\n        field,\n        cellToFocusAfter: 'below'\n      });\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'backdropClick') {\n      apiRef.current.stopCellEditMode({\n        id,\n        field,\n        ignoreModifications: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Select, {\n    value: value,\n    onChange: handleChange,\n    MenuProps: {\n      onClose: handleClose\n    },\n    sx: {\n      height: '100%',\n      '& .MuiSelect-select': {\n        display: 'flex',\n        alignItems: 'center',\n        pl: 1\n      }\n    },\n    autoFocus: true,\n    fullWidth: true,\n    open: true,\n    children: STATUS_OPTIONS.map(option => {\n      let IconComponent = null;\n\n      if (option === 'Rejected') {\n        IconComponent = ReportProblemIcon;\n      } else if (option === 'Open') {\n        IconComponent = InfoIcon;\n      } else if (option === 'PartiallyFilled') {\n        IconComponent = AutorenewIcon;\n      } else if (option === 'Filled') {\n        IconComponent = DoneIcon;\n      }\n\n      let label = option;\n\n      if (option === 'PartiallyFilled') {\n        label = 'Partially Filled';\n      }\n\n      return /*#__PURE__*/_jsxs(MenuItem, {\n        value: option,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\n          sx: {\n            minWidth: 36\n          },\n          children: /*#__PURE__*/_jsx(IconComponent, {\n            fontSize: \"small\"\n          })\n        }), /*#__PURE__*/_jsx(ListItemText, {\n          primary: label,\n          sx: {\n            overflow: 'hidden'\n          }\n        })]\n      }, option);\n    })\n  });\n}\n\nexport function renderEditStatus(params) {\n  return /*#__PURE__*/_jsx(EditStatus, _extends({}, params));\n}","map":{"version":3,"names":["_extends","React","useGridApiContext","useGridRootProps","GridEditModes","Select","MenuItem","ListItemIcon","ListItemText","ReportProblemIcon","InfoIcon","AutorenewIcon","DoneIcon","STATUS_OPTIONS","jsx","_jsx","jsxs","_jsxs","EditStatus","props","id","value","field","rootProps","apiRef","handleChange","event","isValid","current","setEditCellValue","target","editMode","Cell","stopCellEditMode","cellToFocusAfter","handleClose","reason","ignoreModifications","onChange","MenuProps","onClose","sx","height","display","alignItems","pl","autoFocus","fullWidth","open","children","map","option","IconComponent","label","minWidth","fontSize","primary","overflow","renderEditStatus","params"],"sources":["/Users/dewan03/project/project/node_modules/@mui/x-data-grid-generator/renderer/renderEditStatus.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext, useGridRootProps, GridEditModes } from '@mui/x-data-grid-premium';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ReportProblemIcon from '@mui/icons-material/ReportProblem';\nimport InfoIcon from '@mui/icons-material/Info';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { STATUS_OPTIONS } from '../services/static-data';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction EditStatus(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n\n  const handleChange = async event => {\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: event.target.value\n    });\n\n    if (isValid && rootProps.editMode === GridEditModes.Cell) {\n      apiRef.current.stopCellEditMode({\n        id,\n        field,\n        cellToFocusAfter: 'below'\n      });\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'backdropClick') {\n      apiRef.current.stopCellEditMode({\n        id,\n        field,\n        ignoreModifications: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Select, {\n    value: value,\n    onChange: handleChange,\n    MenuProps: {\n      onClose: handleClose\n    },\n    sx: {\n      height: '100%',\n      '& .MuiSelect-select': {\n        display: 'flex',\n        alignItems: 'center',\n        pl: 1\n      }\n    },\n    autoFocus: true,\n    fullWidth: true,\n    open: true,\n    children: STATUS_OPTIONS.map(option => {\n      let IconComponent = null;\n\n      if (option === 'Rejected') {\n        IconComponent = ReportProblemIcon;\n      } else if (option === 'Open') {\n        IconComponent = InfoIcon;\n      } else if (option === 'PartiallyFilled') {\n        IconComponent = AutorenewIcon;\n      } else if (option === 'Filled') {\n        IconComponent = DoneIcon;\n      }\n\n      let label = option;\n\n      if (option === 'PartiallyFilled') {\n        label = 'Partially Filled';\n      }\n\n      return /*#__PURE__*/_jsxs(MenuItem, {\n        value: option,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\n          sx: {\n            minWidth: 36\n          },\n          children: /*#__PURE__*/_jsx(IconComponent, {\n            fontSize: \"small\"\n          })\n        }), /*#__PURE__*/_jsx(ListItemText, {\n          primary: label,\n          sx: {\n            overflow: 'hidden'\n          }\n        })]\n      }, option);\n    })\n  });\n}\n\nexport function renderEditStatus(params) {\n  return /*#__PURE__*/_jsx(EditStatus, _extends({}, params));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}