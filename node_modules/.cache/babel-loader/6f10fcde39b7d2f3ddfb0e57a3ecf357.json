{"ast":null,"code":"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Country = /*#__PURE__*/React.memo(function Country(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      '&  > img': {\n        mr: 0.5,\n        flexShrink: 0,\n        width: '20px'\n      }\n    },\n    children: [/*#__PURE__*/_jsx(\"img\", {\n      loading: \"lazy\",\n      width: \"20\",\n      src: `https://flagcdn.com/w20/${value.code.toLowerCase()}.png`,\n      srcSet: `https://flagcdn.com/w40/${value.code.toLowerCase()}.png 2x`,\n      alt: \"\"\n    }), /*#__PURE__*/_jsx(Box, {\n      component: \"span\",\n      sx: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      children: value.label\n    })]\n  });\n});\nexport function renderCountry(params) {\n  if (params.value == null) {\n    return '';\n  } // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n\n\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Country, {\n    value: params.value\n  });\n}","map":{"version":3,"names":["React","Box","jsx","_jsx","jsxs","_jsxs","Country","memo","props","value","sx","width","display","alignItems","mr","flexShrink","children","loading","src","code","toLowerCase","srcSet","alt","component","overflow","textOverflow","label","renderCountry","params","aggregation","hasCellUnit"],"sources":["/Users/dewan03/project/project/node_modules/@mui/x-data-grid-generator/renderer/renderCountry.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Country = /*#__PURE__*/React.memo(function Country(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      '&  > img': {\n        mr: 0.5,\n        flexShrink: 0,\n        width: '20px'\n      }\n    },\n    children: [/*#__PURE__*/_jsx(\"img\", {\n      loading: \"lazy\",\n      width: \"20\",\n      src: `https://flagcdn.com/w20/${value.code.toLowerCase()}.png`,\n      srcSet: `https://flagcdn.com/w40/${value.code.toLowerCase()}.png 2x`,\n      alt: \"\"\n    }), /*#__PURE__*/_jsx(Box, {\n      component: \"span\",\n      sx: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      children: value.label\n    })]\n  });\n});\nexport function renderCountry(params) {\n  if (params.value == null) {\n    return '';\n  } // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n\n\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Country, {\n    value: params.value\n  });\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;AACA,MAAMC,OAAO,GAAG,aAAaN,KAAK,CAACO,IAAN,CAAW,SAASD,OAAT,CAAiBE,KAAjB,EAAwB;EAC9D,MAAM;IACJC;EADI,IAEFD,KAFJ;EAGA,OAAO,aAAaH,KAAK,CAACJ,GAAD,EAAM;IAC7BS,EAAE,EAAE;MACFC,KAAK,EAAE,MADL;MAEFC,OAAO,EAAE,MAFP;MAGFC,UAAU,EAAE,QAHV;MAIF,YAAY;QACVC,EAAE,EAAE,GADM;QAEVC,UAAU,EAAE,CAFF;QAGVJ,KAAK,EAAE;MAHG;IAJV,CADyB;IAW7BK,QAAQ,EAAE,CAAC,aAAab,IAAI,CAAC,KAAD,EAAQ;MAClCc,OAAO,EAAE,MADyB;MAElCN,KAAK,EAAE,IAF2B;MAGlCO,GAAG,EAAG,2BAA0BT,KAAK,CAACU,IAAN,CAAWC,WAAX,EAAyB,MAHvB;MAIlCC,MAAM,EAAG,2BAA0BZ,KAAK,CAACU,IAAN,CAAWC,WAAX,EAAyB,SAJ1B;MAKlCE,GAAG,EAAE;IAL6B,CAAR,CAAlB,EAMN,aAAanB,IAAI,CAACF,GAAD,EAAM;MACzBsB,SAAS,EAAE,MADc;MAEzBb,EAAE,EAAE;QACFc,QAAQ,EAAE,QADR;QAEFC,YAAY,EAAE;MAFZ,CAFqB;MAMzBT,QAAQ,EAAEP,KAAK,CAACiB;IANS,CAAN,CANX;EAXmB,CAAN,CAAzB;AA0BD,CA9B4B,CAA7B;AA+BA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;EACpC,IAAIA,MAAM,CAACnB,KAAP,IAAgB,IAApB,EAA0B;IACxB,OAAO,EAAP;EACD,CAHmC,CAGlC;EACF;;;EAGA,IAAImB,MAAM,CAACC,WAAP,IAAsB,CAACD,MAAM,CAACC,WAAP,CAAmBC,WAA9C,EAA2D;IACzD,OAAO,IAAP;EACD;;EAED,OAAO,aAAa3B,IAAI,CAACG,OAAD,EAAU;IAChCG,KAAK,EAAEmB,MAAM,CAACnB;EADkB,CAAV,CAAxB;AAGD"},"metadata":{},"sourceType":"module"}