{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_REORDER_COL_DEF } from './gridRowReorderColDef';\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      rowReorderCellContainer: ['rowReorderCellContainer'],\n      columnHeaderReorder: ['columnHeaderReorder']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport const useGridRowReorderPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateReorderColumn = React.useCallback(columnsState => {\n    const reorderColumn = _extends({}, GRID_REORDER_COL_DEF, {\n      cellClassName: classes.rowReorderCellContainer,\n      headerClassName: classes.columnHeaderReorder,\n      headerName: apiRef.current.getLocaleText('rowReorderingHeaderName')\n    });\n\n    const shouldHaveReorderColumn = props.rowReordering;\n    const haveReorderColumn = columnsState.lookup[reorderColumn.field] != null;\n\n    if (shouldHaveReorderColumn && haveReorderColumn) {\n      return columnsState;\n    }\n\n    if (shouldHaveReorderColumn && !haveReorderColumn) {\n      columnsState.lookup[reorderColumn.field] = reorderColumn;\n      columnsState.all = [reorderColumn.field, ...columnsState.all];\n    } else if (!shouldHaveReorderColumn && haveReorderColumn) {\n      delete columnsState.lookup[reorderColumn.field];\n      columnsState.all = columnsState.all.filter(field => field !== reorderColumn.field);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.rowReordering]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateReorderColumn);\n};","map":{"version":3,"names":["_extends","React","unstable_composeClasses","composeClasses","getDataGridUtilityClass","useGridRegisterPipeProcessor","GRID_REORDER_COL_DEF","useUtilityClasses","ownerState","classes","useMemo","slots","rowReorderCellContainer","columnHeaderReorder","useGridRowReorderPreProcessors","apiRef","props","updateReorderColumn","useCallback","columnsState","reorderColumn","cellClassName","headerClassName","headerName","current","getLocaleText","shouldHaveReorderColumn","rowReordering","haveReorderColumn","lookup","field","all","filter"],"sources":["/Users/dewan03/project/project/node_modules/@mui/x-data-grid-pro/hooks/features/rowReorder/useGridRowReorderPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_REORDER_COL_DEF } from './gridRowReorderColDef';\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      rowReorderCellContainer: ['rowReorderCellContainer'],\n      columnHeaderReorder: ['columnHeaderReorder']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport const useGridRowReorderPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateReorderColumn = React.useCallback(columnsState => {\n    const reorderColumn = _extends({}, GRID_REORDER_COL_DEF, {\n      cellClassName: classes.rowReorderCellContainer,\n      headerClassName: classes.columnHeaderReorder,\n      headerName: apiRef.current.getLocaleText('rowReorderingHeaderName')\n    });\n\n    const shouldHaveReorderColumn = props.rowReordering;\n    const haveReorderColumn = columnsState.lookup[reorderColumn.field] != null;\n\n    if (shouldHaveReorderColumn && haveReorderColumn) {\n      return columnsState;\n    }\n\n    if (shouldHaveReorderColumn && !haveReorderColumn) {\n      columnsState.lookup[reorderColumn.field] = reorderColumn;\n      columnsState.all = [reorderColumn.field, ...columnsState.all];\n    } else if (!shouldHaveReorderColumn && haveReorderColumn) {\n      delete columnsState.lookup[reorderColumn.field];\n      columnsState.all = columnsState.all.filter(field => field !== reorderColumn.field);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.rowReordering]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateReorderColumn);\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,eAA1D;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,4BAAT,QAA6C,4BAA7C;AACA,SAASC,oBAAT,QAAqC,wBAArC;;AAEA,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;EACtC,MAAM;IACJC;EADI,IAEFD,UAFJ;EAGA,OAAOP,KAAK,CAACS,OAAN,CAAc,MAAM;IACzB,MAAMC,KAAK,GAAG;MACZC,uBAAuB,EAAE,CAAC,yBAAD,CADb;MAEZC,mBAAmB,EAAE,CAAC,qBAAD;IAFT,CAAd;IAIA,OAAOV,cAAc,CAACQ,KAAD,EAAQP,uBAAR,EAAiCK,OAAjC,CAArB;EACD,CANM,EAMJ,CAACA,OAAD,CANI,CAAP;AAOD,CAXD;;AAaA,OAAO,MAAMK,8BAA8B,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;EAC/D,MAAMR,UAAU,GAAG;IACjBC,OAAO,EAAEO,KAAK,CAACP;EADE,CAAnB;EAGA,MAAMA,OAAO,GAAGF,iBAAiB,CAACC,UAAD,CAAjC;EACA,MAAMS,mBAAmB,GAAGhB,KAAK,CAACiB,WAAN,CAAkBC,YAAY,IAAI;IAC5D,MAAMC,aAAa,GAAGpB,QAAQ,CAAC,EAAD,EAAKM,oBAAL,EAA2B;MACvDe,aAAa,EAAEZ,OAAO,CAACG,uBADgC;MAEvDU,eAAe,EAAEb,OAAO,CAACI,mBAF8B;MAGvDU,UAAU,EAAER,MAAM,CAACS,OAAP,CAAeC,aAAf,CAA6B,yBAA7B;IAH2C,CAA3B,CAA9B;;IAMA,MAAMC,uBAAuB,GAAGV,KAAK,CAACW,aAAtC;IACA,MAAMC,iBAAiB,GAAGT,YAAY,CAACU,MAAb,CAAoBT,aAAa,CAACU,KAAlC,KAA4C,IAAtE;;IAEA,IAAIJ,uBAAuB,IAAIE,iBAA/B,EAAkD;MAChD,OAAOT,YAAP;IACD;;IAED,IAAIO,uBAAuB,IAAI,CAACE,iBAAhC,EAAmD;MACjDT,YAAY,CAACU,MAAb,CAAoBT,aAAa,CAACU,KAAlC,IAA2CV,aAA3C;MACAD,YAAY,CAACY,GAAb,GAAmB,CAACX,aAAa,CAACU,KAAf,EAAsB,GAAGX,YAAY,CAACY,GAAtC,CAAnB;IACD,CAHD,MAGO,IAAI,CAACL,uBAAD,IAA4BE,iBAAhC,EAAmD;MACxD,OAAOT,YAAY,CAACU,MAAb,CAAoBT,aAAa,CAACU,KAAlC,CAAP;MACAX,YAAY,CAACY,GAAb,GAAmBZ,YAAY,CAACY,GAAb,CAAiBC,MAAjB,CAAwBF,KAAK,IAAIA,KAAK,KAAKV,aAAa,CAACU,KAAzD,CAAnB;IACD;;IAED,OAAOX,YAAP;EACD,CAvB2B,EAuBzB,CAACJ,MAAD,EAASN,OAAT,EAAkBO,KAAK,CAACW,aAAxB,CAvByB,CAA5B;EAwBAtB,4BAA4B,CAACU,MAAD,EAAS,gBAAT,EAA2BE,mBAA3B,CAA5B;AACD,CA9BM"},"metadata":{},"sourceType":"module"}