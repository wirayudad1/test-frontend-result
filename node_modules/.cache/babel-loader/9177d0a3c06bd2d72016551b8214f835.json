{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport MuiDivider from '@mui/material/Divider';\nimport { gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid-pro/internals';\nimport { getAvailableAggregationFunctions, addFooterRows, getAggregationRules, mergeStateWithAggregationModel } from './gridAggregationUtils';\nimport { wrapColumnWithAggregationValue, unwrapColumnFromAggregation } from './wrapColumnWithAggregation';\nimport { GridAggregationColumnMenuItem } from '../../../components/GridAggregationColumnMenuItem';\nimport { gridAggregationModelSelector } from './gridAggregationSelectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst Divider = () => /*#__PURE__*/_jsx(MuiDivider, {\n  onClick: event => event.stopPropagation()\n});\n\nexport const useGridAggregationPreProcessors = (apiRef, props) => {\n  const updateAggregatedColumns = React.useCallback(columnsState => {\n    const {\n      rulesOnLastColumnHydration\n    } = apiRef.current.unstable_caches.aggregation;\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: columnsState.lookup,\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    columnsState.all.forEach(field => {\n      const shouldHaveAggregationValue = !!aggregationRules[field];\n      const haveAggregationColumnValue = !!rulesOnLastColumnHydration[field];\n      let column = columnsState.lookup[field];\n\n      if (haveAggregationColumnValue) {\n        column = unwrapColumnFromAggregation({\n          column\n        });\n      }\n\n      if (shouldHaveAggregationValue) {\n        column = wrapColumnWithAggregationValue({\n          column,\n          aggregationRule: aggregationRules[field],\n          apiRef\n        });\n      }\n\n      columnsState.lookup[field] = column;\n    });\n    apiRef.current.unstable_caches.aggregation.rulesOnLastColumnHydration = aggregationRules;\n    return columnsState;\n  }, [apiRef, props.aggregationFunctions, props.disableAggregation]);\n  const addGroupFooterRows = React.useCallback(groupingParams => {\n    let newGroupingParams;\n    let rulesOnLastRowHydration;\n\n    if (props.disableAggregation) {\n      newGroupingParams = groupingParams;\n      rulesOnLastRowHydration = {};\n    } else {\n      const aggregationRules = getAggregationRules({\n        columnsLookup: gridColumnLookupSelector(apiRef),\n        aggregationModel: gridAggregationModelSelector(apiRef),\n        aggregationFunctions: props.aggregationFunctions\n      });\n      rulesOnLastRowHydration = aggregationRules; // If no column have an aggregation rule\n      // Then don't create the footer rows\n\n      if (Object.values(aggregationRules).length === 0) {\n        newGroupingParams = groupingParams;\n      } else {\n        newGroupingParams = addFooterRows({\n          groupingParams,\n          aggregationRules,\n          getAggregationPosition: props.getAggregationPosition,\n          apiRef\n        });\n      }\n    }\n\n    apiRef.current.unstable_caches.aggregation.rulesOnLastRowHydration = rulesOnLastRowHydration;\n    return newGroupingParams;\n  }, [apiRef, props.disableAggregation, props.getAggregationPosition, props.aggregationFunctions]);\n  const addColumnMenuButtons = React.useCallback((initialValue, column) => {\n    if (props.disableAggregation) {\n      return initialValue;\n    }\n\n    const availableAggregationFunctions = getAvailableAggregationFunctions({\n      aggregationFunctions: props.aggregationFunctions,\n      column\n    });\n\n    if (availableAggregationFunctions.length === 0) {\n      return initialValue;\n    }\n\n    return [...initialValue, /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(GridAggregationColumnMenuItem, {\n      column: column,\n      label: apiRef.current.getLocaleText('aggregationMenuItemHeader'),\n      availableAggregationFunctions: availableAggregationFunctions\n    })];\n  }, [apiRef, props.aggregationFunctions, props.disableAggregation]);\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    if (props.disableAggregation) {\n      return prevState;\n    }\n\n    const aggregationModelToExport = gridAggregationModelSelector(apiRef);\n\n    if (Object.values(aggregationModelToExport).length === 0) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      aggregation: {\n        model: aggregationModelToExport\n      }\n    });\n  }, [apiRef, props.disableAggregation]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    if (props.disableAggregation) {\n      return params;\n    }\n\n    const aggregationModel = (_context$stateToResto = context.stateToRestore.aggregation) == null ? void 0 : _context$stateToResto.model;\n\n    if (aggregationModel != null) {\n      apiRef.current.setState(mergeStateWithAggregationModel(aggregationModel));\n    }\n\n    return params;\n  }, [apiRef, props.disableAggregation]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateAggregatedColumns);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addGroupFooterRows);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuButtons);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n};","map":{"version":3,"names":["_extends","React","MuiDivider","gridColumnLookupSelector","useGridRegisterPipeProcessor","getAvailableAggregationFunctions","addFooterRows","getAggregationRules","mergeStateWithAggregationModel","wrapColumnWithAggregationValue","unwrapColumnFromAggregation","GridAggregationColumnMenuItem","gridAggregationModelSelector","jsx","_jsx","Divider","onClick","event","stopPropagation","useGridAggregationPreProcessors","apiRef","props","updateAggregatedColumns","useCallback","columnsState","rulesOnLastColumnHydration","current","unstable_caches","aggregation","aggregationRules","disableAggregation","columnsLookup","lookup","aggregationModel","aggregationFunctions","all","forEach","field","shouldHaveAggregationValue","haveAggregationColumnValue","column","aggregationRule","addGroupFooterRows","groupingParams","newGroupingParams","rulesOnLastRowHydration","Object","values","length","getAggregationPosition","addColumnMenuButtons","initialValue","availableAggregationFunctions","label","getLocaleText","stateExportPreProcessing","prevState","aggregationModelToExport","model","stateRestorePreProcessing","params","context","_context$stateToResto","stateToRestore","setState"],"sources":["/Users/dewan03/project/project/node_modules/@mui/x-data-grid-premium/hooks/features/aggregation/useGridAggregationPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport MuiDivider from '@mui/material/Divider';\nimport { gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid-pro/internals';\nimport { getAvailableAggregationFunctions, addFooterRows, getAggregationRules, mergeStateWithAggregationModel } from './gridAggregationUtils';\nimport { wrapColumnWithAggregationValue, unwrapColumnFromAggregation } from './wrapColumnWithAggregation';\nimport { GridAggregationColumnMenuItem } from '../../../components/GridAggregationColumnMenuItem';\nimport { gridAggregationModelSelector } from './gridAggregationSelectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst Divider = () => /*#__PURE__*/_jsx(MuiDivider, {\n  onClick: event => event.stopPropagation()\n});\n\nexport const useGridAggregationPreProcessors = (apiRef, props) => {\n  const updateAggregatedColumns = React.useCallback(columnsState => {\n    const {\n      rulesOnLastColumnHydration\n    } = apiRef.current.unstable_caches.aggregation;\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: columnsState.lookup,\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    columnsState.all.forEach(field => {\n      const shouldHaveAggregationValue = !!aggregationRules[field];\n      const haveAggregationColumnValue = !!rulesOnLastColumnHydration[field];\n      let column = columnsState.lookup[field];\n\n      if (haveAggregationColumnValue) {\n        column = unwrapColumnFromAggregation({\n          column\n        });\n      }\n\n      if (shouldHaveAggregationValue) {\n        column = wrapColumnWithAggregationValue({\n          column,\n          aggregationRule: aggregationRules[field],\n          apiRef\n        });\n      }\n\n      columnsState.lookup[field] = column;\n    });\n    apiRef.current.unstable_caches.aggregation.rulesOnLastColumnHydration = aggregationRules;\n    return columnsState;\n  }, [apiRef, props.aggregationFunctions, props.disableAggregation]);\n  const addGroupFooterRows = React.useCallback(groupingParams => {\n    let newGroupingParams;\n    let rulesOnLastRowHydration;\n\n    if (props.disableAggregation) {\n      newGroupingParams = groupingParams;\n      rulesOnLastRowHydration = {};\n    } else {\n      const aggregationRules = getAggregationRules({\n        columnsLookup: gridColumnLookupSelector(apiRef),\n        aggregationModel: gridAggregationModelSelector(apiRef),\n        aggregationFunctions: props.aggregationFunctions\n      });\n      rulesOnLastRowHydration = aggregationRules; // If no column have an aggregation rule\n      // Then don't create the footer rows\n\n      if (Object.values(aggregationRules).length === 0) {\n        newGroupingParams = groupingParams;\n      } else {\n        newGroupingParams = addFooterRows({\n          groupingParams,\n          aggregationRules,\n          getAggregationPosition: props.getAggregationPosition,\n          apiRef\n        });\n      }\n    }\n\n    apiRef.current.unstable_caches.aggregation.rulesOnLastRowHydration = rulesOnLastRowHydration;\n    return newGroupingParams;\n  }, [apiRef, props.disableAggregation, props.getAggregationPosition, props.aggregationFunctions]);\n  const addColumnMenuButtons = React.useCallback((initialValue, column) => {\n    if (props.disableAggregation) {\n      return initialValue;\n    }\n\n    const availableAggregationFunctions = getAvailableAggregationFunctions({\n      aggregationFunctions: props.aggregationFunctions,\n      column\n    });\n\n    if (availableAggregationFunctions.length === 0) {\n      return initialValue;\n    }\n\n    return [...initialValue, /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(GridAggregationColumnMenuItem, {\n      column: column,\n      label: apiRef.current.getLocaleText('aggregationMenuItemHeader'),\n      availableAggregationFunctions: availableAggregationFunctions\n    })];\n  }, [apiRef, props.aggregationFunctions, props.disableAggregation]);\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    if (props.disableAggregation) {\n      return prevState;\n    }\n\n    const aggregationModelToExport = gridAggregationModelSelector(apiRef);\n\n    if (Object.values(aggregationModelToExport).length === 0) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      aggregation: {\n        model: aggregationModelToExport\n      }\n    });\n  }, [apiRef, props.disableAggregation]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    if (props.disableAggregation) {\n      return params;\n    }\n\n    const aggregationModel = (_context$stateToResto = context.stateToRestore.aggregation) == null ? void 0 : _context$stateToResto.model;\n\n    if (aggregationModel != null) {\n      apiRef.current.setState(mergeStateWithAggregationModel(aggregationModel));\n    }\n\n    return params;\n  }, [apiRef, props.disableAggregation]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateAggregatedColumns);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addGroupFooterRows);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuButtons);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}