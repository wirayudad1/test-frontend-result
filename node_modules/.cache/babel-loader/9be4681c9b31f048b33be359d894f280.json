{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnLookupSelector, useGridApiEventHandler, useGridApiMethod } from '@mui/x-data-grid-pro';\nimport { gridAggregationModelSelector } from './gridAggregationSelectors';\nimport { getAggregationRules, mergeStateWithAggregationModel, areAggregationRulesEqual } from './gridAggregationUtils';\nimport { createAggregationLookup } from './createAggregationLookup';\nexport const aggregationStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$aggregationMod, _props$initialState, _props$initialState$a;\n\n  apiRef.current.unstable_caches.aggregation = {\n    rulesOnLastColumnHydration: {},\n    rulesOnLastRowHydration: {}\n  };\n  return _extends({}, state, {\n    aggregation: {\n      model: (_ref = (_props$aggregationMod = props.aggregationModel) != null ? _props$aggregationMod : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$a = _props$initialState.aggregation) == null ? void 0 : _props$initialState$a.model) != null ? _ref : {}\n    }\n  });\n};\nexport const useGridAggregation = (apiRef, props) => {\n  apiRef.current.unstable_registerControlState({\n    stateId: 'aggregation',\n    propModel: props.aggregationModel,\n    propOnChange: props.onAggregationModelChange,\n    stateSelector: gridAggregationModelSelector,\n    changeEvent: 'aggregationModelChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setAggregationModel = React.useCallback(model => {\n    const currentModel = gridAggregationModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      apiRef.current.setState(mergeStateWithAggregationModel(model));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const applyAggregation = React.useCallback(() => {\n    const aggregationLookup = createAggregationLookup({\n      apiRef,\n      getAggregationPosition: props.getAggregationPosition,\n      aggregationFunctions: props.aggregationFunctions,\n      aggregationRowsScope: props.aggregationRowsScope\n    });\n    apiRef.current.setState(state => _extends({}, state, {\n      aggregation: _extends({}, state.aggregation, {\n        lookup: aggregationLookup\n      })\n    }));\n  }, [apiRef, props.getAggregationPosition, props.aggregationFunctions, props.aggregationRowsScope]);\n  const aggregationApi = {\n    setAggregationModel\n  };\n  useGridApiMethod(apiRef, aggregationApi, 'GridAggregationApi');\n  /**\n   * EVENTS\n   */\n\n  const checkAggregationRulesDiff = React.useCallback(() => {\n    const {\n      rulesOnLastRowHydration,\n      rulesOnLastColumnHydration\n    } = apiRef.current.unstable_caches.aggregation;\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: gridColumnLookupSelector(apiRef),\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    }); // Re-apply the row hydration to add / remove the aggregation footers\n\n    if (!areAggregationRulesEqual(rulesOnLastRowHydration, aggregationRules)) {\n      apiRef.current.unstable_requestPipeProcessorsApplication('hydrateRows');\n      applyAggregation();\n    } // Re-apply the column hydration to wrap / unwrap the aggregated columns\n\n\n    if (!areAggregationRulesEqual(rulesOnLastColumnHydration, aggregationRules)) {\n      apiRef.current.unstable_requestPipeProcessorsApplication('hydrateColumns');\n    }\n  }, [apiRef, applyAggregation, props.aggregationFunctions, props.disableAggregation]);\n  useGridApiEventHandler(apiRef, 'aggregationModelChange', checkAggregationRulesDiff);\n  useGridApiEventHandler(apiRef, 'columnsChange', checkAggregationRulesDiff);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', applyAggregation);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.aggregationModel !== undefined) {\n      apiRef.current.setAggregationModel(props.aggregationModel);\n    }\n  }, [apiRef, props.aggregationModel]);\n};","map":{"version":3,"names":["_extends","React","gridColumnLookupSelector","useGridApiEventHandler","useGridApiMethod","gridAggregationModelSelector","getAggregationRules","mergeStateWithAggregationModel","areAggregationRulesEqual","createAggregationLookup","aggregationStateInitializer","state","props","apiRef","_ref","_props$aggregationMod","_props$initialState","_props$initialState$a","current","unstable_caches","aggregation","rulesOnLastColumnHydration","rulesOnLastRowHydration","model","aggregationModel","initialState","useGridAggregation","unstable_registerControlState","stateId","propModel","propOnChange","onAggregationModelChange","stateSelector","changeEvent","setAggregationModel","useCallback","currentModel","setState","forceUpdate","applyAggregation","aggregationLookup","getAggregationPosition","aggregationFunctions","aggregationRowsScope","lookup","aggregationApi","checkAggregationRulesDiff","aggregationRules","disableAggregation","columnsLookup","unstable_requestPipeProcessorsApplication","useEffect","undefined"],"sources":["/Users/dewan03/project/project/node_modules/@mui/x-data-grid-premium/hooks/features/aggregation/useGridAggregation.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnLookupSelector, useGridApiEventHandler, useGridApiMethod } from '@mui/x-data-grid-pro';\nimport { gridAggregationModelSelector } from './gridAggregationSelectors';\nimport { getAggregationRules, mergeStateWithAggregationModel, areAggregationRulesEqual } from './gridAggregationUtils';\nimport { createAggregationLookup } from './createAggregationLookup';\nexport const aggregationStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$aggregationMod, _props$initialState, _props$initialState$a;\n\n  apiRef.current.unstable_caches.aggregation = {\n    rulesOnLastColumnHydration: {},\n    rulesOnLastRowHydration: {}\n  };\n  return _extends({}, state, {\n    aggregation: {\n      model: (_ref = (_props$aggregationMod = props.aggregationModel) != null ? _props$aggregationMod : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$a = _props$initialState.aggregation) == null ? void 0 : _props$initialState$a.model) != null ? _ref : {}\n    }\n  });\n};\nexport const useGridAggregation = (apiRef, props) => {\n  apiRef.current.unstable_registerControlState({\n    stateId: 'aggregation',\n    propModel: props.aggregationModel,\n    propOnChange: props.onAggregationModelChange,\n    stateSelector: gridAggregationModelSelector,\n    changeEvent: 'aggregationModelChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setAggregationModel = React.useCallback(model => {\n    const currentModel = gridAggregationModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      apiRef.current.setState(mergeStateWithAggregationModel(model));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const applyAggregation = React.useCallback(() => {\n    const aggregationLookup = createAggregationLookup({\n      apiRef,\n      getAggregationPosition: props.getAggregationPosition,\n      aggregationFunctions: props.aggregationFunctions,\n      aggregationRowsScope: props.aggregationRowsScope\n    });\n    apiRef.current.setState(state => _extends({}, state, {\n      aggregation: _extends({}, state.aggregation, {\n        lookup: aggregationLookup\n      })\n    }));\n  }, [apiRef, props.getAggregationPosition, props.aggregationFunctions, props.aggregationRowsScope]);\n  const aggregationApi = {\n    setAggregationModel\n  };\n  useGridApiMethod(apiRef, aggregationApi, 'GridAggregationApi');\n  /**\n   * EVENTS\n   */\n\n  const checkAggregationRulesDiff = React.useCallback(() => {\n    const {\n      rulesOnLastRowHydration,\n      rulesOnLastColumnHydration\n    } = apiRef.current.unstable_caches.aggregation;\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: gridColumnLookupSelector(apiRef),\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    }); // Re-apply the row hydration to add / remove the aggregation footers\n\n    if (!areAggregationRulesEqual(rulesOnLastRowHydration, aggregationRules)) {\n      apiRef.current.unstable_requestPipeProcessorsApplication('hydrateRows');\n      applyAggregation();\n    } // Re-apply the column hydration to wrap / unwrap the aggregated columns\n\n\n    if (!areAggregationRulesEqual(rulesOnLastColumnHydration, aggregationRules)) {\n      apiRef.current.unstable_requestPipeProcessorsApplication('hydrateColumns');\n    }\n  }, [apiRef, applyAggregation, props.aggregationFunctions, props.disableAggregation]);\n  useGridApiEventHandler(apiRef, 'aggregationModelChange', checkAggregationRulesDiff);\n  useGridApiEventHandler(apiRef, 'columnsChange', checkAggregationRulesDiff);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', applyAggregation);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.aggregationModel !== undefined) {\n      apiRef.current.setAggregationModel(props.aggregationModel);\n    }\n  }, [apiRef, props.aggregationModel]);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}