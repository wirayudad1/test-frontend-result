{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GridFeatureModeConstant } from '@mui/x-data-grid';\nexport const GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';\n\nconst getSkeletonRowId = index => `${GRID_SKELETON_ROW_ROOT_ID}-${index}`;\n\nexport const useGridLazyLoaderPreProcessors = (apiRef, props) => {\n  var _props$experimentalFe;\n\n  const {\n    lazyLoading\n  } = (_props$experimentalFe = props.experimentalFeatures) != null ? _props$experimentalFe : {};\n  const addSkeletonRows = React.useCallback(groupingParams => {\n    if (!lazyLoading || props.rowsLoadingMode !== GridFeatureModeConstant.server || !props.rowCount || groupingParams.ids.length >= props.rowCount) {\n      return groupingParams;\n    }\n\n    const newRowsIds = [...groupingParams.ids];\n\n    for (let i = 0; i < props.rowCount - groupingParams.ids.length; i += 1) {\n      const skeletonId = getSkeletonRowId(i);\n      newRowsIds.push(skeletonId);\n    }\n\n    return _extends({}, groupingParams, {\n      ids: newRowsIds\n    });\n  }, [props.rowCount, props.rowsLoadingMode, lazyLoading]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addSkeletonRows);\n};","map":{"version":3,"names":["_extends","React","useGridRegisterPipeProcessor","GridFeatureModeConstant","GRID_SKELETON_ROW_ROOT_ID","getSkeletonRowId","index","useGridLazyLoaderPreProcessors","apiRef","props","_props$experimentalFe","lazyLoading","experimentalFeatures","addSkeletonRows","useCallback","groupingParams","rowsLoadingMode","server","rowCount","ids","length","newRowsIds","i","skeletonId","push"],"sources":["/Users/dewan03/project/project/node_modules/@mui/x-data-grid-pro/hooks/features/lazyLoader/useGridLazyLoaderPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GridFeatureModeConstant } from '@mui/x-data-grid';\nexport const GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';\n\nconst getSkeletonRowId = index => `${GRID_SKELETON_ROW_ROOT_ID}-${index}`;\n\nexport const useGridLazyLoaderPreProcessors = (apiRef, props) => {\n  var _props$experimentalFe;\n\n  const {\n    lazyLoading\n  } = (_props$experimentalFe = props.experimentalFeatures) != null ? _props$experimentalFe : {};\n  const addSkeletonRows = React.useCallback(groupingParams => {\n    if (!lazyLoading || props.rowsLoadingMode !== GridFeatureModeConstant.server || !props.rowCount || groupingParams.ids.length >= props.rowCount) {\n      return groupingParams;\n    }\n\n    const newRowsIds = [...groupingParams.ids];\n\n    for (let i = 0; i < props.rowCount - groupingParams.ids.length; i += 1) {\n      const skeletonId = getSkeletonRowId(i);\n      newRowsIds.push(skeletonId);\n    }\n\n    return _extends({}, groupingParams, {\n      ids: newRowsIds\n    });\n  }, [props.rowCount, props.rowsLoadingMode, lazyLoading]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addSkeletonRows);\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,4BAAT,QAA6C,4BAA7C;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,OAAO,MAAMC,yBAAyB,GAAG,kCAAlC;;AAEP,MAAMC,gBAAgB,GAAGC,KAAK,IAAK,GAAEF,yBAA0B,IAAGE,KAAM,EAAxE;;AAEA,OAAO,MAAMC,8BAA8B,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;EAC/D,IAAIC,qBAAJ;;EAEA,MAAM;IACJC;EADI,IAEF,CAACD,qBAAqB,GAAGD,KAAK,CAACG,oBAA/B,KAAwD,IAAxD,GAA+DF,qBAA/D,GAAuF,EAF3F;EAGA,MAAMG,eAAe,GAAGZ,KAAK,CAACa,WAAN,CAAkBC,cAAc,IAAI;IAC1D,IAAI,CAACJ,WAAD,IAAgBF,KAAK,CAACO,eAAN,KAA0Bb,uBAAuB,CAACc,MAAlE,IAA4E,CAACR,KAAK,CAACS,QAAnF,IAA+FH,cAAc,CAACI,GAAf,CAAmBC,MAAnB,IAA6BX,KAAK,CAACS,QAAtI,EAAgJ;MAC9I,OAAOH,cAAP;IACD;;IAED,MAAMM,UAAU,GAAG,CAAC,GAAGN,cAAc,CAACI,GAAnB,CAAnB;;IAEA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAAK,CAACS,QAAN,GAAiBH,cAAc,CAACI,GAAf,CAAmBC,MAAxD,EAAgEE,CAAC,IAAI,CAArE,EAAwE;MACtE,MAAMC,UAAU,GAAGlB,gBAAgB,CAACiB,CAAD,CAAnC;MACAD,UAAU,CAACG,IAAX,CAAgBD,UAAhB;IACD;;IAED,OAAOvB,QAAQ,CAAC,EAAD,EAAKe,cAAL,EAAqB;MAClCI,GAAG,EAAEE;IAD6B,CAArB,CAAf;EAGD,CAfuB,EAerB,CAACZ,KAAK,CAACS,QAAP,EAAiBT,KAAK,CAACO,eAAvB,EAAwCL,WAAxC,CAfqB,CAAxB;EAgBAT,4BAA4B,CAACM,MAAD,EAAS,aAAT,EAAwBK,eAAxB,CAA5B;AACD,CAvBM"},"metadata":{},"sourceType":"module"}