{"ast":null,"code":"var _jsxFileName = \"/Users/dewan03/project/project/src/App.js\";\nimport * as React from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DataGridPro, GridActionsCellItem } from '@mui/x-data-grid-pro';\nimport { randomCreatedDate, randomTraderName, randomEmail, randomUpdatedDate } from '@mui/x-data-grid-generator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicColumnPinning() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGridPro, {\n      rows: rows,\n      columns: columns,\n      initialState: {\n        pinnedColumns: {\n          left: ['name'],\n          right: ['actions']\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = BasicColumnPinning;\nconst columns = [{\n  field: 'name',\n  headerName: 'Name',\n  width: 160,\n  editable: true\n}, {\n  field: 'email',\n  headerName: 'Email',\n  width: 200,\n  editable: true\n}, {\n  field: 'age',\n  headerName: 'Age',\n  type: 'number',\n  editable: true\n}, {\n  field: 'dateCreated',\n  headerName: 'Date Created',\n  type: 'date',\n  width: 180,\n  editable: true\n}, {\n  field: 'lastLogin',\n  headerName: 'Last Login',\n  type: 'dateTime',\n  width: 220,\n  editable: true\n}, {\n  field: 'actions',\n  type: 'actions',\n  width: 100,\n  getActions: () => [/*#__PURE__*/_jsxDEV(GridActionsCellItem, {\n    icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 34\n    }, this),\n    label: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(GridActionsCellItem, {\n    icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 34\n    }, this),\n    label: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this)]\n}];\nconst rows = [{\n  id: 1,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 25,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 2,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 36,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 3,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 19,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 4,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 28,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 5,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 23,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 6,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 27,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 7,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 18,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 8,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 31,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 9,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 24,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 10,\n  name: randomTraderName(),\n  email: randomEmail(),\n  age: 35,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicColumnPinning\");","map":{"version":3,"names":["React","DeleteIcon","EditIcon","DataGridPro","GridActionsCellItem","randomCreatedDate","randomTraderName","randomEmail","randomUpdatedDate","BasicColumnPinning","height","width","rows","columns","pinnedColumns","left","right","field","headerName","editable","type","getActions","id","name","email","age","dateCreated","lastLogin"],"sources":["/Users/dewan03/project/project/src/App.js"],"sourcesContent":["import * as React from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DataGridPro, GridActionsCellItem } from '@mui/x-data-grid-pro';\nimport {\n  randomCreatedDate,\n  randomTraderName,\n  randomEmail,\n  randomUpdatedDate,\n} from '@mui/x-data-grid-generator';\n\nexport default function BasicColumnPinning() {\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPro\n        rows={rows}\n        columns={columns}\n        initialState={{ pinnedColumns: { left: ['name'], right: ['actions'] } }}\n      />\n    </div>\n  );\n}\n\nconst columns = [\n  { field: 'name', headerName: 'Name', width: 160, editable: true },\n  { field: 'email', headerName: 'Email', width: 200, editable: true },\n  { field: 'age', headerName: 'Age', type: 'number', editable: true },\n  {\n    field: 'dateCreated',\n    headerName: 'Date Created',\n    type: 'date',\n    width: 180,\n    editable: true,\n  },\n  {\n    field: 'lastLogin',\n    headerName: 'Last Login',\n    type: 'dateTime',\n    width: 220,\n    editable: true,\n  },\n  {\n    field: 'actions',\n    type: 'actions',\n    width: 100,\n    getActions: () => [\n      <GridActionsCellItem icon={<EditIcon />} label=\"Edit\" />,\n      <GridActionsCellItem icon={<DeleteIcon />} label=\"Delete\" />,\n    ],\n  },\n];\n\nconst rows = [\n  {\n    id: 1,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 25,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 2,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 36,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 3,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 19,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 4,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 28,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 5,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 23,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 6,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 27,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 7,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 18,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 8,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 31,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 9,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 24,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 10,\n    name: randomTraderName(),\n    email: randomEmail(),\n    age: 35,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}