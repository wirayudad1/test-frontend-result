{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridSelector, useGridApiEventHandler, useGridApiMethod, gridRowIdsSelector } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector, gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelRawHeightCacheSelector } from './gridDetailPanelSelector';\nexport const detailPanelStateInitializer = (state, props) => {\n  var _ref, _props$detailPanelExp, _props$initialState, _props$initialState$d;\n\n  return _extends({}, state, {\n    detailPanel: {\n      heightCache: {},\n      expandedRowIds: (_ref = (_props$detailPanelExp = props.detailPanelExpandedRowIds) != null ? _props$detailPanelExp : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$d = _props$initialState.detailPanel) == null ? void 0 : _props$initialState$d.expandedRowIds) != null ? _ref : []\n    }\n  });\n};\n\nfunction cacheContentAndHeight(apiRef, getDetailPanelContent, getDetailPanelHeight, previousHeightCache) {\n  if (typeof getDetailPanelContent !== 'function') {\n    return {};\n  } // TODO change to lazy approach using a Proxy\n  // only call getDetailPanelContent when asked for an id\n\n\n  const rowIds = gridRowIdsSelector(apiRef);\n  const contentCache = rowIds.reduce((acc, id) => {\n    const params = apiRef.current.getRowParams(id);\n    acc[id] = getDetailPanelContent(params);\n    return acc;\n  }, {});\n  const heightCache = rowIds.reduce((acc, id) => {\n    var _previousHeightCache$;\n\n    if (contentCache[id] == null) {\n      return acc;\n    }\n\n    const params = apiRef.current.getRowParams(id);\n    const height = getDetailPanelHeight(params);\n    const autoHeight = height === 'auto';\n    acc[id] = {\n      autoHeight,\n      height: autoHeight ? (_previousHeightCache$ = previousHeightCache[id]) == null ? void 0 : _previousHeightCache$.height : height\n    };\n    return acc;\n  }, {});\n  return {\n    contentCache,\n    heightCache\n  };\n}\n\nexport const useGridDetailPanel = (apiRef, props) => {\n  const expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\n  const contentCache = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\n  const handleCellClick = React.useCallback((params, event) => {\n    if (params.field !== GRID_DETAIL_PANEL_TOGGLE_FIELD || props.getDetailPanelContent == null) {\n      return;\n    }\n\n    const content = contentCache[params.id];\n\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    } // Ignore if the user didn't click specifically in the \"i\" button\n\n\n    if (event.target === event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.toggleDetailPanel(params.id);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n\n    if ((event.ctrlKey || event.metaKey) && event.key === 'Enter') {\n      // TODO v6: only support Space on the detail toggle\n      apiRef.current.toggleDetailPanel(params.id);\n      return;\n    }\n\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD && event.key === ' ') {\n      apiRef.current.toggleDetailPanel(params.id);\n    }\n  }, [apiRef, props.getDetailPanelContent]);\n  useGridApiEventHandler(apiRef, 'cellClick', handleCellClick);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'detailPanels',\n    propModel: props.detailPanelExpandedRowIds,\n    propOnChange: props.onDetailPanelExpandedRowIdsChange,\n    stateSelector: gridDetailPanelExpandedRowIdsSelector,\n    changeEvent: 'detailPanelsExpandedRowIdsChange'\n  });\n  const toggleDetailPanel = React.useCallback(id => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n\n    const content = contentCache[id];\n\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    }\n\n    const ids = apiRef.current.getExpandedDetailPanels();\n    apiRef.current.setExpandedDetailPanels(ids.includes(id) ? ids.filter(rowId => rowId !== id) : [...ids, id]);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const getExpandedDetailPanels = React.useCallback(() => gridDetailPanelExpandedRowIdsSelector(apiRef.current.state), [apiRef]);\n  const setExpandedDetailPanels = React.useCallback(ids => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          expandedRowIds: ids\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const storeDetailPanelHeight = React.useCallback((id, height) => {\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n\n    if (!heightCache[id] || heightCache[id].height === height) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          heightCache: _extends({}, heightCache, {\n            [id]: _extends({}, heightCache[id], {\n              height\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.unstable_requestPipeProcessorsApplication('rowHeight');\n  }, [apiRef]);\n  const detailPanelHasAutoHeight = React.useCallback(id => {\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n    return heightCache[id] ? heightCache[id].autoHeight : false;\n  }, [apiRef]);\n  const detailPanelApi = {\n    toggleDetailPanel,\n    getExpandedDetailPanels,\n    setExpandedDetailPanels,\n    unstable_storeDetailPanelHeight: storeDetailPanelHeight,\n    unstable_detailPanelHasAutoHeight: detailPanelHasAutoHeight\n  };\n  useGridApiMethod(apiRef, detailPanelApi, 'detailPanelApi');\n  React.useEffect(() => {\n    if (props.detailPanelExpandedRowIds) {\n      const currentModel = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\n\n      if (currentModel !== props.detailPanelExpandedRowIds) {\n        apiRef.current.setExpandedDetailPanels(props.detailPanelExpandedRowIds);\n      }\n    }\n  }, [apiRef, props.detailPanelExpandedRowIds]);\n  const updateCachesAndForceUpdate = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', updateCachesAndForceUpdate);\n  const previousGetDetailPanelContentProp = React.useRef();\n  const previousGetDetailPanelHeightProp = React.useRef();\n  const updateCachesIfNeeded = React.useCallback(() => {\n    if (props.getDetailPanelContent === previousGetDetailPanelContentProp.current && props.getDetailPanelHeight === previousGetDetailPanelHeightProp.current) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    previousGetDetailPanelContentProp.current = props.getDetailPanelContent;\n    previousGetDetailPanelHeightProp.current = props.getDetailPanelHeight;\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  const addDetailHeight = React.useCallback((initialValue, row) => {\n    var _heightCache$row$id;\n\n    if (!expandedRowIds || expandedRowIds.length === 0 || !expandedRowIds.includes(row.id)) {\n      return _extends({}, initialValue, {\n        detail: 0\n      });\n    }\n\n    updateCachesIfNeeded();\n    const heightCache = gridDetailPanelExpandedRowsHeightCacheSelector(apiRef);\n    return _extends({}, initialValue, {\n      detail: (_heightCache$row$id = heightCache[row.id]) != null ? _heightCache$row$id : 0 // Fallback to zero because the cache might not be ready yet (e.g. page was changed)\n\n    });\n  }, [apiRef, expandedRowIds, updateCachesIfNeeded]);\n  useGridRegisterPipeProcessor(apiRef, 'rowHeight', addDetailHeight);\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    updateCachesIfNeeded();\n  }\n};","map":{"version":3,"names":["_extends","React","useGridSelector","useGridApiEventHandler","useGridApiMethod","gridRowIdsSelector","useGridRegisterPipeProcessor","GRID_DETAIL_PANEL_TOGGLE_FIELD","gridDetailPanelExpandedRowIdsSelector","gridDetailPanelExpandedRowsContentCacheSelector","gridDetailPanelExpandedRowsHeightCacheSelector","gridDetailPanelRawHeightCacheSelector","detailPanelStateInitializer","state","props","_ref","_props$detailPanelExp","_props$initialState","_props$initialState$d","detailPanel","heightCache","expandedRowIds","detailPanelExpandedRowIds","initialState","cacheContentAndHeight","apiRef","getDetailPanelContent","getDetailPanelHeight","previousHeightCache","rowIds","contentCache","reduce","acc","id","params","current","getRowParams","_previousHeightCache$","height","autoHeight","useGridDetailPanel","handleCellClick","useCallback","event","field","content","isValidElement","target","currentTarget","toggleDetailPanel","handleCellKeyDown","ctrlKey","metaKey","key","unstable_registerControlState","stateId","propModel","propOnChange","onDetailPanelExpandedRowIdsChange","stateSelector","changeEvent","ids","getExpandedDetailPanels","setExpandedDetailPanels","includes","filter","rowId","setState","forceUpdate","storeDetailPanelHeight","unstable_requestPipeProcessorsApplication","detailPanelHasAutoHeight","detailPanelApi","unstable_storeDetailPanelHeight","unstable_detailPanelHasAutoHeight","useEffect","currentModel","updateCachesAndForceUpdate","previousGetDetailPanelContentProp","useRef","previousGetDetailPanelHeightProp","updateCachesIfNeeded","addDetailHeight","initialValue","row","_heightCache$row$id","length","detail","isFirstRender"],"sources":["/Users/dewan03/project/project/node_modules/@mui/x-data-grid-pro/hooks/features/detailPanel/useGridDetailPanel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridSelector, useGridApiEventHandler, useGridApiMethod, gridRowIdsSelector } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector, gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelRawHeightCacheSelector } from './gridDetailPanelSelector';\nexport const detailPanelStateInitializer = (state, props) => {\n  var _ref, _props$detailPanelExp, _props$initialState, _props$initialState$d;\n\n  return _extends({}, state, {\n    detailPanel: {\n      heightCache: {},\n      expandedRowIds: (_ref = (_props$detailPanelExp = props.detailPanelExpandedRowIds) != null ? _props$detailPanelExp : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$d = _props$initialState.detailPanel) == null ? void 0 : _props$initialState$d.expandedRowIds) != null ? _ref : []\n    }\n  });\n};\n\nfunction cacheContentAndHeight(apiRef, getDetailPanelContent, getDetailPanelHeight, previousHeightCache) {\n  if (typeof getDetailPanelContent !== 'function') {\n    return {};\n  } // TODO change to lazy approach using a Proxy\n  // only call getDetailPanelContent when asked for an id\n\n\n  const rowIds = gridRowIdsSelector(apiRef);\n  const contentCache = rowIds.reduce((acc, id) => {\n    const params = apiRef.current.getRowParams(id);\n    acc[id] = getDetailPanelContent(params);\n    return acc;\n  }, {});\n  const heightCache = rowIds.reduce((acc, id) => {\n    var _previousHeightCache$;\n\n    if (contentCache[id] == null) {\n      return acc;\n    }\n\n    const params = apiRef.current.getRowParams(id);\n    const height = getDetailPanelHeight(params);\n    const autoHeight = height === 'auto';\n    acc[id] = {\n      autoHeight,\n      height: autoHeight ? (_previousHeightCache$ = previousHeightCache[id]) == null ? void 0 : _previousHeightCache$.height : height\n    };\n    return acc;\n  }, {});\n  return {\n    contentCache,\n    heightCache\n  };\n}\n\nexport const useGridDetailPanel = (apiRef, props) => {\n  const expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\n  const contentCache = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\n  const handleCellClick = React.useCallback((params, event) => {\n    if (params.field !== GRID_DETAIL_PANEL_TOGGLE_FIELD || props.getDetailPanelContent == null) {\n      return;\n    }\n\n    const content = contentCache[params.id];\n\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    } // Ignore if the user didn't click specifically in the \"i\" button\n\n\n    if (event.target === event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.toggleDetailPanel(params.id);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n\n    if ((event.ctrlKey || event.metaKey) && event.key === 'Enter') {\n      // TODO v6: only support Space on the detail toggle\n      apiRef.current.toggleDetailPanel(params.id);\n      return;\n    }\n\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD && event.key === ' ') {\n      apiRef.current.toggleDetailPanel(params.id);\n    }\n  }, [apiRef, props.getDetailPanelContent]);\n  useGridApiEventHandler(apiRef, 'cellClick', handleCellClick);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'detailPanels',\n    propModel: props.detailPanelExpandedRowIds,\n    propOnChange: props.onDetailPanelExpandedRowIdsChange,\n    stateSelector: gridDetailPanelExpandedRowIdsSelector,\n    changeEvent: 'detailPanelsExpandedRowIdsChange'\n  });\n  const toggleDetailPanel = React.useCallback(id => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n\n    const content = contentCache[id];\n\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    }\n\n    const ids = apiRef.current.getExpandedDetailPanels();\n    apiRef.current.setExpandedDetailPanels(ids.includes(id) ? ids.filter(rowId => rowId !== id) : [...ids, id]);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const getExpandedDetailPanels = React.useCallback(() => gridDetailPanelExpandedRowIdsSelector(apiRef.current.state), [apiRef]);\n  const setExpandedDetailPanels = React.useCallback(ids => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          expandedRowIds: ids\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const storeDetailPanelHeight = React.useCallback((id, height) => {\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n\n    if (!heightCache[id] || heightCache[id].height === height) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          heightCache: _extends({}, heightCache, {\n            [id]: _extends({}, heightCache[id], {\n              height\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.unstable_requestPipeProcessorsApplication('rowHeight');\n  }, [apiRef]);\n  const detailPanelHasAutoHeight = React.useCallback(id => {\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n    return heightCache[id] ? heightCache[id].autoHeight : false;\n  }, [apiRef]);\n  const detailPanelApi = {\n    toggleDetailPanel,\n    getExpandedDetailPanels,\n    setExpandedDetailPanels,\n    unstable_storeDetailPanelHeight: storeDetailPanelHeight,\n    unstable_detailPanelHasAutoHeight: detailPanelHasAutoHeight\n  };\n  useGridApiMethod(apiRef, detailPanelApi, 'detailPanelApi');\n  React.useEffect(() => {\n    if (props.detailPanelExpandedRowIds) {\n      const currentModel = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\n\n      if (currentModel !== props.detailPanelExpandedRowIds) {\n        apiRef.current.setExpandedDetailPanels(props.detailPanelExpandedRowIds);\n      }\n    }\n  }, [apiRef, props.detailPanelExpandedRowIds]);\n  const updateCachesAndForceUpdate = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', updateCachesAndForceUpdate);\n  const previousGetDetailPanelContentProp = React.useRef();\n  const previousGetDetailPanelHeightProp = React.useRef();\n  const updateCachesIfNeeded = React.useCallback(() => {\n    if (props.getDetailPanelContent === previousGetDetailPanelContentProp.current && props.getDetailPanelHeight === previousGetDetailPanelHeightProp.current) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    previousGetDetailPanelContentProp.current = props.getDetailPanelContent;\n    previousGetDetailPanelHeightProp.current = props.getDetailPanelHeight;\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  const addDetailHeight = React.useCallback((initialValue, row) => {\n    var _heightCache$row$id;\n\n    if (!expandedRowIds || expandedRowIds.length === 0 || !expandedRowIds.includes(row.id)) {\n      return _extends({}, initialValue, {\n        detail: 0\n      });\n    }\n\n    updateCachesIfNeeded();\n    const heightCache = gridDetailPanelExpandedRowsHeightCacheSelector(apiRef);\n    return _extends({}, initialValue, {\n      detail: (_heightCache$row$id = heightCache[row.id]) != null ? _heightCache$row$id : 0 // Fallback to zero because the cache might not be ready yet (e.g. page was changed)\n\n    });\n  }, [apiRef, expandedRowIds, updateCachesIfNeeded]);\n  useGridRegisterPipeProcessor(apiRef, 'rowHeight', addDetailHeight);\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    updateCachesIfNeeded();\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}